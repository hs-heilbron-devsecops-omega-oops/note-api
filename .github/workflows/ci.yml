name: code_verification
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.4'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pylint black bandit

      - name: Run tests in parallel with coverage
        run: |
          pytest -v --cov=note_api --cov-report=xml --cov-report=html -n auto
      - name: Run Pylint on note_api
        run: pylint -E note_api/

      - name: Run Pylint on tests
        run: pylint -E tests/


      - name: Run Black Check
        run: |
          black --check note_api/ tests/ || true
      - name: Run Black
        run: |
          black  note_api/ tests/

      - name: Submit coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
            file: ./coverage.xml
            token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run Bandit to check for vulnerabilities
        run: bandit -r note_api/ -f json -o bandit_output.json

      - name: Upload Bandit report
        uses: actions/upload-artifact@v3
        with:
            name: bandit-report
            path: bandit_output.json