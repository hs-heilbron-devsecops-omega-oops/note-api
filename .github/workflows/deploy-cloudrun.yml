name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  packages: read

jobs:
  deploy:
    name: Build and Deploy to Google Cloud Run
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0


      - name: Load configuration
        id: config
        run: |
          echo "${{ secrets.CONFIG_JSON }}" | base64 --decode > config.json
          cat config.json
          echo "::set-output name=service_name::$(jq -r '.service_name' config.json)"
          echo "::set-output name=region::$(jq -r '.region' config.json)"
          echo "::set-output name=artifact_registry::$(jq -r '.artifact_registry' config.json)"
          echo "::set-output name=env_vars::$(jq -r '.env_vars | tojson' config.json)"


      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          create_credentials_file: true
          export_environment_variables: true
          access_token_lifetime: 3600s
          access_token_scopes: https://www.googleapis.com/auth/cloud-platform


      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ steps.config.outputs.artifact_registry }}


      - name: Build Docker image
        run: |
          docker build -t ${{ steps.config.outputs.artifact_registry }}/cloud-run-source-deploy/note-api:${{ github.sha }} .


      - name: Push Docker image
        run: |
          docker push ${{ steps.config.outputs.artifact_registry }}/cloud-run-source-deploy/note-api:${{ github.sha }}


      - name: Deploy to Google Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ steps.config.outputs.service_name }}
          image: ${{ steps.config.outputs.artifact_registry }}/cloud-run-source-deploy/note-api:${{ github.sha }}
          region: ${{ steps.config.outputs.region }}
          env_vars: ${{ steps.config.outputs.env_vars }}
          ingress: all
          no_traffic: false


      - name: Log Deployment Details
        run: |
          echo "Deployed service: ${{ steps.config.outputs.service_name }}"
          echo "Region: ${{ steps.config.outputs.region }}"
