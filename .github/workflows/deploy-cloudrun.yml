name: Deploy to Google Cloud Run

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed

permissions:
  id-token: write
  contents: read
  packages: read


jobs:
  deploy:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Debug Workflow Run Context
        run: |
          echo "Triggered by workflow: ${{ github.event.workflow_run.name }}"
          echo "Triggered workflow ID: ${{ github.event.workflow_run.id }}"
          echo "Triggered workflow run number: ${{ github.event.workflow_run.run_number }}"
          echo "Triggered workflow URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}"

      - name: Download Image Name Artifact
        uses: actions/download-artifact@v4
        with:
          name: image-name
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Download Build Number Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-number
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Authenticate with GitHub Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Read Image Name
        run: |
          IMAGE_NAME=$(cat image-name.txt)
          echo "Using Image Name: $IMAGE_NAME"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Read Build Number
        run: |
          BUILD_NUMBER=$(cat build-number.txt)
          echo "Using Image Name: $BUILD_NUMBER"
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV   
      

      - name: Load configuration
        run: |
          echo "${{ secrets.CONFIG_JSON }}" | base64 --decode > config.json
          echo "service_name=$(jq -r '.service_name' config.json)" >> $GITHUB_ENV
          echo "region=$(jq -r '.region' config.json)" >> $GITHUB_ENV
          echo "env_vars=$(jq -r '.env_vars | tojson' config.json)" >> $GITHUB_ENV
          echo "artifact_registry=$(jq -r '.artifact_registry' config.json)" >> $GITHUB_ENV


      - name: Pull Source Image if Not Available
        run: |
          SOURCE_IMAGE="${{ env.IMAGE_NAME }}"

          
          if ! docker images | grep -q "$(echo $SOURCE_IMAGE | cut -d':' -f2)"; then
            echo "Source image not found locally. Pulling image: $SOURCE_IMAGE"
            docker pull $SOURCE_IMAGE
          else
            echo "Source image found locally: $SOURCE_IMAGE"
          fi
          

      - name: Retrieve Build Number
        id: retrieve_build_number
        run: |
          
          TAGGED_IMAGE="${{ env.artifact_registry }}/hs-heilbronn-devsecops/cloud-run-source-deploy/note-api-hs-heilbron-devsecops-omega-oops:${{ env.BUILD_NUMBER }}"

          echo "TAGGED_IMAGE=$TAGGED_IMAGE" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "Generated image tag: $TAGGED_IMAGE"

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          create_credentials_file: true
          export_environment_variables: true
          access_token_lifetime: 3600s
          access_token_scopes: https://www.googleapis.com/auth/cloud-platform

      - name: Log GCP authentication success
        run: echo "Successfully authenticated with GCP."


      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
            project_id: ${{ secrets.PROJECT_ID }}

      - name: Check gcloud version
        run: gcloud version

      - name: Verify Authentication
        run: gcloud auth list


      - name: Log Docker login success
        run: echo "Successfully logged into GitHub Container Registry."

      - name: Authenticate with Google Artifact Registry
        run: |
              gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.artifact_registry }}


      - name: Push Image to Google Artifact Registry
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ env.TAGGED_IMAGE }}
          docker push ${{ env.TAGGED_IMAGE }}        

      - name: Deploy to Google Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
            service: ${{ env.service_name }}
            image: ${{ env.TAGGED_IMAGE }}
            region: ${{ env.region }}
            env_vars: ${{ env.env_vars }}
            ingress: all
            no_traffic: false

      - name: Get Cloud Run service details
        run: gcloud run services describe ${{ env.service_name }} --region ${{ env.region }}

      - name: Log Deployment Details
        run: |
          echo "Deployed image: ${{ env.TAGGED_IMAGE }}" > deployment.log
          echo "Service name: ${{ env.service_name }}" >> deployment.log
          echo "Region: ${{ env.region }}" >> deployment.log